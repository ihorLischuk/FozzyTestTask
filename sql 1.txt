Найти все полностью оплаченные заказы. Заказы оплачиваются в порядке очередности по мере
поступления заказа.

declare @customers table (id int, name nvarchar(20));
declare @orders table (id int, summa numeric(18,2), customerId int);
declare @payments table (customerId int, payment numeric(18,2));

insert @customers (id, name)
values
    (1, N'Первый'),
    (2, N'Второй'),
    (3, N'Третий'),
    (4, N'Четвертый');

insert @orders (id, summa, customerId)
values
    (1, 10, 1),
    (2, 15, 1),
    (3, 20, 1),
    (4, 25, 1),
    (5, 12, 2),
    (6, 14, 2),
    (7, 200, 2),
    (8, 100, 3),
    (9, 200, 3);

insert @payments (customerId, payment)
values
    (1, 30),
    (2, 500),
    (3, 100),
    (4, 20);  
  
SELECT *, (payment - totalSum) remainder
FROM (
    SELECT 
        c.id customerId, 
        c.name customerName,
        o.id orderId,
        o.summa,
        p.payment,
        max(o.iSum) OVER(PARTITION BY o.customerId) as totalSum
    FROM @customers c
    JOIN @payments p ON p.customerId = c.id
    JOIN (
        SELECT 
            *,
            SUM(summa) OVER(
                PARTITION BY customerId 
                ORDER BY id
            ) iSum
        FROM @orders
    ) o ON o.customerId = c.id
    WHERE o.iSum <= p.payment
) resultTable